openapi: 3.0.3
info:
  title: Rent Contracts API
  version: 1.0.0
  description: API for managing rental contracts, addresses, users, and contract versions.
servers:
  - url: http://localhost:8080
paths:
  /api/v1/addresses:
    get:
      tags: [Addresses]
      summary: Get all addresses
      responses:
        '200':
          description: List of addresses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressResponse'
    post:
      tags: [Addresses]
      summary: Create a new address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressInput'
      responses:
        '201':
          description: Address created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResponse'
  /api/v1/addresses/{id}:
    get:
      tags: [Addresses]
      summary: Get address by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Address found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResponse'
        '404':
          description: Address not found
    put:
      tags: [Addresses]
      summary: Update address
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressInput'
      responses:
        '200':
          description: Address updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResponse'
    delete:
      tags: [Addresses]
      summary: Delete address
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Address deleted
  /api/v1/users:
    get:
      tags: [Users]
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
    post:
      tags: [Users]
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/v1/users/{id}:
    get:
      tags: [Users]
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
    put:
      tags: [Users]
      summary: Update user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      tags: [Users]
      summary: Delete user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted
  /api/v1/contracts:
    get:
      tags: [Contracts]
      summary: Get all contracts
      parameters:
        - in: query
          name: tenantId
          required: false
          schema:
            type: string
            format: uuid
          description: Filter contracts by tenant ID
      responses:
        '200':
          description: List of contracts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractResponse'
    post:
      tags: [Contracts]
      summary: Create a new contract
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractInput'
      responses:
        '201':
          description: Contract created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponse'
  /api/v1/contracts/{id}:
    get:
      tags: [Contracts]
      summary: Get contract by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Contract found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponse'
        '404':
          description: Contract not found
    put:
      tags: [Contracts]
      summary: Update contract
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractInput'
      responses:
        '200':
          description: Contract updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponse'
    delete:
      tags: [Contracts]
      summary: Delete contract
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Contract deleted
  /api/v1/contracts/{id}/document:
    get:
      tags: [Contracts]
      summary: Get contract document as PDF
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Contract ID
      responses:
        '200':
          description: Contract document PDF
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid contract UUID
        '500':
          description: Error generating document
  /api/v1/contracts/{id}/versions:
    get:
      tags: [Contract Versions]
      summary: Get all versions of a contract
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Contract ID
      responses:
        '200':
          description: List of contract versions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractVersionResponse'
        '400':
          description: Invalid contract UUID
        '500':
          description: Internal server error
  /api/v1/contracts/versions:
    post:
      tags: [Contract Versions]
      summary: Create a new contract version
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractVersionInput'
      responses:
        '201':
          description: Contract version created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractVersionResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

components:
  schemas:
    AddressInput:
      type: object
      required:
        - type
        - street
        - number
        - neighborhood
        - city
        - state
        - zipCode
        - country
      properties:
        type:
          type: string
          enum: [residential, commercial]
        street:
          type: string
        number:
          type: string
        neighborhood:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string

    AddressResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [residential, commercial]
        street:
          type: string
        number:
          type: string
        neighborhood:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    UserInput:
      type: object
      required:
        - type
        - addressId
        - firstName
        - lastName
        - email
        - phone
      properties:
        type:
          type: string
          enum: [tenant, landlord]
        addressId:
          type: string
          format: uuid
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string

    UserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [tenant, landlord]
        addressId:
          type: string
          format: uuid
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ContractInput:
      type: object
      required:
        - tenantId
        - addressId
      properties:
        tenantId:
          type: string
          format: uuid
        addressId:
          type: string
          format: uuid

    ContractResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        currentVersionId:
          type: string
          format: uuid
        tenantId:
          type: string
          format: uuid
        addressId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        currentVersion:
          $ref: '#/components/schemas/ContractVersionResponse'
        tenant:
          $ref: '#/components/schemas/UserResponse'
        address:
          $ref: '#/components/schemas/AddressResponse'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/ContractVersionResponse'

    ContractVersionInput:
      type: object
      required:
        - contractId
        - version
        - startDate
        - endDate
        - monthlyRent
        - depositAmount
        - terms
      properties:
        contractId:
          type: string
          format: uuid
        version:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        monthlyRent:
          type: number
          format: decimal
        depositAmount:
          type: number
          format: decimal
        terms:
          type: string

    ContractVersionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        contractId:
          type: string
          format: uuid
        version:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        monthlyRent:
          type: number
          format: decimal
        depositAmount:
          type: number
          format: decimal
        terms:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
